//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace USP.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using USP.Models.Entity;
    
    public partial class USPEntities : DbContext
    {
        public USPEntities()
            : base("name=USPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<IdCardImg> IdCardImg { get; set; }
        public virtual DbSet<OpenPlatform> OpenPlatform { get; set; }
        public virtual DbSet<OpenPlatformAccessToken> OpenPlatformAccessToken { get; set; }
        public virtual DbSet<OpenPlatformDefaultMsg> OpenPlatformDefaultMsg { get; set; }
        public virtual DbSet<OpenPlatformMenu> OpenPlatformMenu { get; set; }
        public virtual DbSet<OpenPlatformMenuType> OpenPlatformMenuType { get; set; }
        public virtual DbSet<OpenPlatformMO> OpenPlatformMO { get; set; }
        public virtual DbSet<OpenPlatformMsg> OpenPlatformMsg { get; set; }
        public virtual DbSet<OpenPlatformMsgChildren> OpenPlatformMsgChildren { get; set; }
        public virtual DbSet<OpenPlatformMsgKey> OpenPlatformMsgKey { get; set; }
        public virtual DbSet<OpenPlatformMsgType> OpenPlatformMsgType { get; set; }
        public virtual DbSet<OpenPlatformMT> OpenPlatformMT { get; set; }
        public virtual DbSet<OpenPlatformSubscriber> OpenPlatformSubscriber { get; set; }
        public virtual DbSet<OpenPlatformUserInfo> OpenPlatformUserInfo { get; set; }
        public virtual DbSet<SysArea> SysArea { get; set; }
        public virtual DbSet<SysCorp> SysCorp { get; set; }
        public virtual DbSet<SysCorpFeeType> SysCorpFeeType { get; set; }
        public virtual DbSet<SysCorpGrade> SysCorpGrade { get; set; }
        public virtual DbSet<SysCorpStatus> SysCorpStatus { get; set; }
        public virtual DbSet<SysCorpType> SysCorpType { get; set; }
        public virtual DbSet<SysCorpVocation> SysCorpVocation { get; set; }
        public virtual DbSet<SysLoginLog> SysLoginLog { get; set; }
        public virtual DbSet<SysMenu> SysMenu { get; set; }
        public virtual DbSet<SysMenuTemplate> SysMenuTemplate { get; set; }
        public virtual DbSet<SysOperator> SysOperator { get; set; }
        public virtual DbSet<SysOperatorGrade> SysOperatorGrade { get; set; }
        public virtual DbSet<SysOperatorStar> SysOperatorStar { get; set; }
        public virtual DbSet<SysOperatorStatus> SysOperatorStatus { get; set; }
        public virtual DbSet<SysPrivilege> SysPrivilege { get; set; }
        public virtual DbSet<SysPrivilegeTemplate> SysPrivilegeTemplate { get; set; }
        public virtual DbSet<SysRole> SysRole { get; set; }
        public virtual DbSet<SysRoleMenu> SysRoleMenu { get; set; }
        public virtual DbSet<SysRoleOperator> SysRoleOperator { get; set; }
        public virtual DbSet<SysRolePrivilege> SysRolePrivilege { get; set; }
        public virtual DbSet<SysSkin> SysSkin { get; set; }
        public virtual DbSet<OpenPlatformType> OpenPlatformType { get; set; }
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<SysBank> SysBank { get; set; }
        public virtual DbSet<UserInfo> UserInfo { get; set; }
    
        public virtual int UP_AddMenu(string name, string icon)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddMenu", nameParameter, iconParameter);
        }
    
        public virtual int UP_AddMenuItem(string parent, string name, string icon, string @class, string area, string controller, string action, string parameter, string url)
        {
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddMenuItem", parentParameter, nameParameter, iconParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter);
        }
    
        public virtual ObjectResult<string> UP_CheckSSO(Nullable<long> @operator, string session)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_CheckSSO", operatorParameter, sessionParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetOperatorMenu(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetOperatorMenu", operatorParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetOperatorMenu(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetOperatorMenu", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetOperatorPrivilege(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetOperatorPrivilege", operatorParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetOperatorPrivilege(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetOperatorPrivilege", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<SysOperator> UP_Login(string loginName, string password, string session, string iP)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOperator>("UP_Login", loginNameParameter, passwordParameter, sessionParameter, iPParameter);
        }
    
        public virtual ObjectResult<SysOperator> UP_Login(string loginName, string password, string session, string iP, MergeOption mergeOption)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sessionParameter = session != null ?
                new ObjectParameter("Session", session) :
                new ObjectParameter("Session", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysOperator>("UP_Login", mergeOption, loginNameParameter, passwordParameter, sessionParameter, iPParameter);
        }
    
        public virtual ObjectResult<UP_ShowArea_Result> UP_ShowArea(Nullable<int> pageIndex, Nullable<int> pageSize, string strOrder, string strOrderType)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowArea_Result>("UP_ShowArea", pageIndexParameter, pageSizeParameter, strOrderParameter, strOrderTypeParameter);
        }
    
        public virtual int UP_ShowPage(string strGetFields, string tblName, string strWhere, string strOrder, string strOrderType, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var strGetFieldsParameter = strGetFields != null ?
                new ObjectParameter("strGetFields", strGetFields) :
                new ObjectParameter("strGetFields", typeof(string));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_ShowPage", strGetFieldsParameter, tblNameParameter, strWhereParameter, strOrderParameter, strOrderTypeParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int UP_AddPrivilege(string menu, string parent, string name, string @class, string area, string controller, string action, string parameter, string url)
        {
            var menuParameter = menu != null ?
                new ObjectParameter("Menu", menu) :
                new ObjectParameter("Menu", typeof(string));
    
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AddPrivilege", menuParameter, parentParameter, nameParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetRoleMenu(Nullable<long> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetRoleMenu", roleParameter);
        }
    
        public virtual ObjectResult<SysMenu> UP_GetRoleMenu(Nullable<long> role, MergeOption mergeOption)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysMenu>("UP_GetRoleMenu", mergeOption, roleParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetRolePrivilege(Nullable<long> role)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetRolePrivilege", roleParameter);
        }
    
        public virtual ObjectResult<SysPrivilege> UP_GetRolePrivilege(Nullable<long> role, MergeOption mergeOption)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysPrivilege>("UP_GetRolePrivilege", mergeOption, roleParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetRoleByOperator(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetRoleByOperator", operatorParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetRoleByOperator(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetRoleByOperator", mergeOption, operatorParameter);
        }
    
        public virtual int UP_ShowPageMultiSort(string strGetFields, string tblName, string strWhere, string strOrder, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var strGetFieldsParameter = strGetFields != null ?
                new ObjectParameter("strGetFields", strGetFields) :
                new ObjectParameter("strGetFields", typeof(string));
    
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_ShowPageMultiSort", strGetFieldsParameter, tblNameParameter, strWhereParameter, strOrderParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AddRole(Nullable<long> corp, string name, Nullable<bool> type, string remark, Nullable<long> creator, string menus, string privileges)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(bool));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("Menus", menus) :
                new ObjectParameter("Menus", typeof(string));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AddRole", corpParameter, nameParameter, typeParameter, remarkParameter, creatorParameter, menusParameter, privilegesParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_DeletPrivilege(Nullable<long> id, Nullable<long> creator)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_DeletPrivilege", idParameter, creatorParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_EditRole(Nullable<long> roleID, string name, string remark, Nullable<long> creator, string menus, string privileges)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("Menus", menus) :
                new ObjectParameter("Menus", typeof(string));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_EditRole", roleIDParameter, nameParameter, remarkParameter, creatorParameter, menusParameter, privilegesParameter);
        }
    
        public virtual ObjectResult<string> UP_AddCorp(string corpName, Nullable<long> corpType, Nullable<long> @operator, Nullable<long> parentCorp, string loginName, string password)
        {
            var corpNameParameter = corpName != null ?
                new ObjectParameter("CorpName", corpName) :
                new ObjectParameter("CorpName", typeof(string));
    
            var corpTypeParameter = corpType.HasValue ?
                new ObjectParameter("CorpType", corpType) :
                new ObjectParameter("CorpType", typeof(long));
    
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            var parentCorpParameter = parentCorp.HasValue ?
                new ObjectParameter("ParentCorp", parentCorp) :
                new ObjectParameter("ParentCorp", typeof(long));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_AddCorp", corpNameParameter, corpTypeParameter, operatorParameter, parentCorpParameter, loginNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> UP_AddPrivilegeTemplate(Nullable<long> corpType, string privileges, Nullable<long> creator)
        {
            var corpTypeParameter = corpType.HasValue ?
                new ObjectParameter("CorpType", corpType) :
                new ObjectParameter("CorpType", typeof(long));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_AddPrivilegeTemplate", corpTypeParameter, privilegesParameter, creatorParameter);
        }
    
        public virtual ObjectResult<string> UP_AuditorCorp(Nullable<long> corp, Nullable<long> auditor)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var auditorParameter = auditor.HasValue ?
                new ObjectParameter("Auditor", auditor) :
                new ObjectParameter("Auditor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_AuditorCorp", corpParameter, auditorParameter);
        }
    
        public virtual ObjectResult<string> UP_CancelCorp(Nullable<long> corp, Nullable<long> canceler)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var cancelerParameter = canceler.HasValue ?
                new ObjectParameter("Canceler", canceler) :
                new ObjectParameter("Canceler", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_CancelCorp", corpParameter, cancelerParameter);
        }
    
        public virtual ObjectResult<string> UP_EnableCorp(Nullable<long> corp, Nullable<long> @operator)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_EnableCorp", corpParameter, operatorParameter);
        }
    
        public virtual ObjectResult<UP_ShowCity_Result> UP_ShowCity(string province)
        {
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowCity_Result>("UP_ShowCity", provinceParameter);
        }
    
        public virtual ObjectResult<UP_ShowCounty_Result> UP_ShowCounty(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowCounty_Result>("UP_ShowCounty", cityParameter);
        }
    
        public virtual ObjectResult<UP_ShowPrivilegeTemplate_Result> UP_ShowPrivilegeTemplate(Nullable<int> pageIndex, Nullable<int> pageSize, string whereStr, string strOrder, string strOrderType)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowPrivilegeTemplate_Result>("UP_ShowPrivilegeTemplate", pageIndexParameter, pageSizeParameter, whereStrParameter, strOrderParameter, strOrderTypeParameter);
        }
    
        public virtual ObjectResult<UP_ShowProvince_Result> UP_ShowProvince()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowProvince_Result>("UP_ShowProvince");
        }
    
        public virtual ObjectResult<string> UP_AddMenus(string parent, string name, string icon, string @class, string area, string controller, string action, string parameter, string url, Nullable<long> creator)
        {
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_AddMenus", parentParameter, nameParameter, iconParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter, creatorParameter);
        }
    
        public virtual int UP_AuditMenuTemplate(Nullable<long> corpType, Nullable<long> auditor, string menus)
        {
            var corpTypeParameter = corpType.HasValue ?
                new ObjectParameter("corpType", corpType) :
                new ObjectParameter("corpType", typeof(long));
    
            var auditorParameter = auditor.HasValue ?
                new ObjectParameter("auditor", auditor) :
                new ObjectParameter("auditor", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("menus", menus) :
                new ObjectParameter("menus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AuditMenuTemplate", corpTypeParameter, auditorParameter, menusParameter);
        }
    
        public virtual ObjectResult<string> UP_CancelMenu(Nullable<long> id, Nullable<long> canceler)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var cancelerParameter = canceler.HasValue ?
                new ObjectParameter("Canceler", canceler) :
                new ObjectParameter("Canceler", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_CancelMenu", idParameter, cancelerParameter);
        }
    
        public virtual ObjectResult<string> UP_EditMenus(Nullable<long> id, string parent, string name, string icon, string @class, string area, string controller, string action, string parameter, string url)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var parentParameter = parent != null ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var iconParameter = icon != null ?
                new ObjectParameter("Icon", icon) :
                new ObjectParameter("Icon", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var parameterParameter = parameter != null ?
                new ObjectParameter("Parameter", parameter) :
                new ObjectParameter("Parameter", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_EditMenus", idParameter, parentParameter, nameParameter, iconParameter, classParameter, areaParameter, controllerParameter, actionParameter, parameterParameter, urlParameter);
        }
    
        public virtual ObjectResult<UP_GetMenuTemplate_Result> UP_GetMenuTemplate(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_GetMenuTemplate_Result>("UP_GetMenuTemplate", idParameter);
        }
    
        public virtual int UP_SaveMenuTemplate(Nullable<long> corpType, Nullable<long> creator, string menus)
        {
            var corpTypeParameter = corpType.HasValue ?
                new ObjectParameter("corpType", corpType) :
                new ObjectParameter("corpType", typeof(long));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("creator", creator) :
                new ObjectParameter("creator", typeof(long));
    
            var menusParameter = menus != null ?
                new ObjectParameter("menus", menus) :
                new ObjectParameter("menus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_SaveMenuTemplate", corpTypeParameter, creatorParameter, menusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AddOperator(Nullable<long> corp, string loginName, string realName, string password, string idCard, string email, string mobile, Nullable<long> creator, string role, string remark)
        {
            var corpParameter = corp.HasValue ?
                new ObjectParameter("Corp", corp) :
                new ObjectParameter("Corp", typeof(long));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var realNameParameter = realName != null ?
                new ObjectParameter("RealName", realName) :
                new ObjectParameter("RealName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idCardParameter = idCard != null ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AddOperator", corpParameter, loginNameParameter, realNameParameter, passwordParameter, idCardParameter, emailParameter, mobileParameter, creatorParameter, roleParameter, remarkParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AlterPassword(Nullable<long> opid, string newPassword)
        {
            var opidParameter = opid.HasValue ?
                new ObjectParameter("opid", opid) :
                new ObjectParameter("opid", typeof(long));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("newPassword", newPassword) :
                new ObjectParameter("newPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AlterPassword", opidParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AlterStatus(Nullable<long> status, Nullable<long> alterOperater, Nullable<long> iD, Nullable<int> type)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var alterOperaterParameter = alterOperater.HasValue ?
                new ObjectParameter("AlterOperater", alterOperater) :
                new ObjectParameter("AlterOperater", typeof(long));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AlterStatus", statusParameter, alterOperaterParameter, iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AddBank(Nullable<long> number, string name, string niceName, string shortName, string remark, string url, Nullable<long> creator, Nullable<int> type)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var niceNameParameter = niceName != null ?
                new ObjectParameter("niceName", niceName) :
                new ObjectParameter("niceName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("shortName", shortName) :
                new ObjectParameter("shortName", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("creator", creator) :
                new ObjectParameter("creator", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AddBank", numberParameter, nameParameter, niceNameParameter, shortNameParameter, remarkParameter, urlParameter, creatorParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_AlterBankStatus(Nullable<long> status, Nullable<long> alterOperater, Nullable<long> iD, Nullable<int> type)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(long));
    
            var alterOperaterParameter = alterOperater.HasValue ?
                new ObjectParameter("AlterOperater", alterOperater) :
                new ObjectParameter("AlterOperater", typeof(long));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_AlterBankStatus", statusParameter, alterOperaterParameter, iDParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> UP_EditBank(Nullable<long> id, Nullable<long> number, string name, string niceName, string shortName, string remark, string url, Nullable<long> creator, Nullable<int> type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var niceNameParameter = niceName != null ?
                new ObjectParameter("niceName", niceName) :
                new ObjectParameter("niceName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("shortName", shortName) :
                new ObjectParameter("shortName", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("creator", creator) :
                new ObjectParameter("creator", typeof(long));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("UP_EditBank", idParameter, numberParameter, nameParameter, niceNameParameter, shortNameParameter, remarkParameter, urlParameter, creatorParameter, typeParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetOperatorRole(Nullable<long> @operator)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetOperatorRole", operatorParameter);
        }
    
        public virtual ObjectResult<SysRole> UP_GetOperatorRole(Nullable<long> @operator, MergeOption mergeOption)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysRole>("UP_GetOperatorRole", mergeOption, operatorParameter);
        }
    
        public virtual ObjectResult<string> UP_EditOperator(Nullable<long> id, string loginName, string realName, Nullable<long> creator, string role, string mobile, string idCard, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("loginName", loginName) :
                new ObjectParameter("loginName", typeof(string));
    
            var realNameParameter = realName != null ?
                new ObjectParameter("RealName", realName) :
                new ObjectParameter("RealName", typeof(string));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var idCardParameter = idCard != null ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_EditOperator", idParameter, loginNameParameter, realNameParameter, creatorParameter, roleParameter, mobileParameter, idCardParameter, emailParameter);
        }
    
        public virtual int UP_AuditorPrivilegeTemplate(Nullable<long> corpType, string privileges, Nullable<long> auditor)
        {
            var corpTypeParameter = corpType.HasValue ?
                new ObjectParameter("CorpType", corpType) :
                new ObjectParameter("CorpType", typeof(long));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            var auditorParameter = auditor.HasValue ?
                new ObjectParameter("Auditor", auditor) :
                new ObjectParameter("Auditor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UP_AuditorPrivilegeTemplate", corpTypeParameter, privilegesParameter, auditorParameter);
        }
    
        public virtual ObjectResult<UP_ShowCorp_Result> UP_ShowCorp(Nullable<int> pageIndex, Nullable<int> pageSize, string whereStr, string strOrder, string strOrderType)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowCorp_Result>("UP_ShowCorp", pageIndexParameter, pageSizeParameter, whereStrParameter, strOrderParameter, strOrderTypeParameter);
        }
    
        public virtual ObjectResult<string> UP_AddOperaterSupplier(Nullable<long> @operator, Nullable<long> supplier, Nullable<long> creator, Nullable<long> organization)
        {
            var operatorParameter = @operator.HasValue ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(long));
    
            var supplierParameter = supplier.HasValue ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(long));
    
            var creatorParameter = creator.HasValue ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(long));
    
            var organizationParameter = organization.HasValue ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UP_AddOperaterSupplier", operatorParameter, supplierParameter, creatorParameter, organizationParameter);
        }
    
        public virtual ObjectResult<UP_ShowOperatorInfo_Result> UP_ShowOperatorInfo(string server, string dataBase, string uID, string pWD, Nullable<int> pageIndex, Nullable<int> pageSize, string whereStr, string strOrder, string strOrderType)
        {
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            var dataBaseParameter = dataBase != null ?
                new ObjectParameter("DataBase", dataBase) :
                new ObjectParameter("DataBase", typeof(string));
    
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var pWDParameter = pWD != null ?
                new ObjectParameter("PWD", pWD) :
                new ObjectParameter("PWD", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            var strOrderTypeParameter = strOrderType != null ?
                new ObjectParameter("strOrderType", strOrderType) :
                new ObjectParameter("strOrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UP_ShowOperatorInfo_Result>("UP_ShowOperatorInfo", serverParameter, dataBaseParameter, uIDParameter, pWDParameter, pageIndexParameter, pageSizeParameter, whereStrParameter, strOrderParameter, strOrderTypeParameter);
        }
    }
}
