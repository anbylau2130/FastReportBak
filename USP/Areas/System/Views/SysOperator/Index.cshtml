@model USP.Models.Entity.SysOperator
@{
    ViewBag.Title = "基本信息";
}
<div class="easyui-panel" data-options="fit:true,border:false">
    <div class="panel panel-info">
        <div class="panel-heading">
            <span class="glyphicon glyphicon-edit"></span>编辑会员信息
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div style="height:12px"></div>
                @using (Html.BeginForm("Index", "SysOperator", new { area = "System" }, FormMethod.Post, new { @class = "form-horizontal", @role = "form", @style = "margin-left:0px;" }))
                {
                    @Html.ValidationSummary(true)

                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.LoginName, "登录名", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.LoginName, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "微信ID", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.WechatOpenid, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.WechatOpenid, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.RealName, "姓名", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.RealName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RealName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.LoginName, "虚拟积分", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.VirtualIntegral, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.VirtualIntegral, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mobile, "手机号码", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "真实积分", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.RealIntegral, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.RealIntegral, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdCard, "身份证", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.IdCard, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdCard, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Balance, "余额", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Balance, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, "邮箱", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "冻结金额", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.FrozenBalance, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.FrozenBalance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Weibo, "微博", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Weibo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Weibo, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "在途金额", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.IncomingBalance, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.IncomingBalance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "col-sm-2 control-label", @for = "Province" })
                        <div class="col-md-4">
                            @*@Html.DropDownListFor(u => u.Province, (List<SelectListItem>)ViewData["ProvinceList"], new { @class = "form-control", required = "true", onclick = "usp.corporation.editCorporation.provinceChange" })*@
                            <select class="easyui-combobox" id="province" name="Province" style="width:280px;"></select>
                            @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "佣金比例", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Commission, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Commission, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "col-sm-2 control-label", @for = "Area" })
                        <div class="col-md-4">
                            @*@Html.DropDownListFor(model => model.Area, (List<SelectListItem>)ViewData["AreaList"], new { @class = "form-control" })*@
                            <select class="easyui-combobox" id="area" name="Area" style="width:280px;"></select>
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "折扣比例", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Discount, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "col-sm-2 control-label", @for = "County" })
                        <div class="col-md-4">
                            @*@Html.DropDownListFor(u => u.County, (List<SelectListItem>)ViewData["CountyList"], new { @class = "form-control" })*@
                            <select class="easyui-combobox" id="county" name="County" style="width:280px;"></select>
                            @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.LoginName, "支付ID", new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.AlipayOpenid, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AlipayOpenid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Password, "密码", new { @class = "col-md-2 control-label" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>

                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Community, "街道", new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @*@Html.TextBoxFor(model => model.Community, new { @class = "form-control" })*@
                                <select class="easyui-combobox" id="community" name="Community" style="width:280px;"></select>
                                @Html.ValidationMessageFor(model => model.Community, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.ID, "公司名称", new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.HiddenFor(Model => Model.Corp)
                                @Html.TextBoxFor(m => m.RealName, new { @class = "form-control", @readonly = true, @Value = ViewBag.CorpName })
                                @Html.ValidationMessageFor(model => model.Corp, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, "地址", new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Skin, "皮肤", new { @class = "col-md-2 control-label" })
                            <div class="col-md-4">
                                <select class="form-control" id="Skin" name="Skin">
                                    @foreach (var v in (List<USP.Models.Entity.SysSkin>)ViewBag.Skin)
                                    {
                                        <option value="@v.ID">@v.Name</option>
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Skin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-3 col-sm-9">
                                <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-edit"></span>编辑</button>
                            </div>
                        </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Static/Js/usp/usp.sysoperator.js"></script>
    @*<script src="~/Static/Js/usp/usp.corporation.editCorporation.js"></script>*@
    <script src="~/Static/Js/usp/usp.system.area.js"></script>
    <script type="text/javascript">
        $(function () {
            usp.init();
            //usp.corporation.editCorporation.eventInit.provinceChange("#Area", "/System/Corporation/GetAreaDropDown", "#Province", "#County");
            //usp.corporation.editCorporation.eventInit.areaChange("#County", "/System/Corporation/GetCountyDropDown", "#Area");

            usp.sysytem.area.getAreaLinkage('#province', '#area', '#county', '#community',
          '@ViewBag.Province', '@ViewBag.Area', '@ViewBag.County', '@ViewBag.Community',
          '/System/Test/GetProvinceData', '/System/Test/GetAreaData?code=@ViewBag.Province',
          '/System/Test/GetCountyData?code=@ViewBag.Area', '/System/Test/GetCommunityData?code=@ViewBag.County',
          '/System/Test/GetChildrens');

            $('#Skin').val(@Model.Skin);

            if ('@TempData["returnMsgType"]' == 'success') {
                toastr.success('@TempData["returnMsg"]');
            }

            if ('@TempData["returnMsgType"]' == 'false') {
                toastr.error('@TempData["returnMsg"]');
            }
        })
    </script>
}

