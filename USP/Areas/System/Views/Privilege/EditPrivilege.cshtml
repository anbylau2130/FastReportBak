@model USP.Models.POCO.PrivilegeAddEdit
@{
    ViewBag.Title = "修改权限";
}
@section themes{
    <link href="/Static/Css/usp/usp.privilege.css" rel="stylesheet" />
}
<div class="panel panel-info">
    <div class="panel-heading">
        <div class="pull-right"><a href="/System/Privilege/Index" class="btn btn-primary btn-sm active"><span class="glyphicon glyphicon-chevron-left"></span>返回</a></div>
        <span class="glyphicon glyphicon-edit"></span> 编辑权限
    </div>
</div>
@using (Html.BeginForm())
{<div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">所属菜单</label>
            <div class="col-md-10">
                <input type="text" id="menu" name="menu" class="form-control text-box single-line" value="@Model.Menu" />
                @Html.ValidationMessageFor(model => model.Menu, "", new { @class = "text-danger", id = "errormenu" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "privilegename" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", id = "errorname" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Clazz, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Clazz, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Clazz, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Area, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Controller, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Method, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Method, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Parameter, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parameter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parameter, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary" onclick="return usp.sysytem.privilege.checkMenu('#menu', '#errormenu')"><span class="glyphicon glyphicon-edit"></span> 编辑</button>
                @*@Html.ValidationMessage("errorresult", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>
    @*<div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">所属菜单</label>
                <div class="col-md-10">
                    <input type="text" id="menu" name="menu" class="form-control text-box single-line" value="@Model.Menu" />
                    @Html.ValidationMessageFor(model => model.Menu, "", new { @class = "text-danger", id = "errormenu" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "privilegename" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", id = "errorname" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Clazz, new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Clazz, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Clazz, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Area, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Controller, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Method, new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Method, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Parameter, new { @class = "control-label col-md-1" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Parameter, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parameter, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary" onclick="return usp.sysytem.privilege.checkMenu('#menu', '#errormenu')"><span class="glyphicon glyphicon-edit"></span> 修改</button>

                </div>
            </div>
        </div>*@
}
@section scripts{
    <script type="text/javascript" src="~/Static/Js/usp/usp.system.privilege.js"></script>
    <script>
        $(function () {
            usp.init();
            usp.sysytem.privilege.initAddOrEdit('#menu', '/System/Privilege/EditPrivilege', '#privilegename', '#errorname', '/System/Privilege/EditPrivilege', '#hdPrivilegeId');
            if ('@TempData["returnMsgType"]' == 'error') {
                toastr.error('@TempData["returnMsg"]');
            }
        });
    </script>
}
